= turbo_frame_tag 'concept_details' do
  - schemes_keys = %w[hasTopConcept topConceptOf]
  - label_xl_set = %w[skos-xl#prefLabel skos-xl#altLabel skos-xl#hiddenLabel]
  = render ConceptDetailsComponent.new(id:'concept-details', acronym: @ontology.acronym,
              properties: @concept.properties,
              top_keys: %w[description comment],
              bottom_keys: %w[disjoint subclass is_a has_part],
              exclude_keys: schemes_keys + label_xl_set + ['inScheme']) do |c|
    - c.header do
      %tr
        %td{nowrap: ""}= t('ontology_details.concept.id')
        %td
          %p= @concept.id
      %tr
        %td{nowrap: ""}= t('ontology_details.concept.preferred_name')
        %td
          - if @concept.prefLabel().nil?
            = render(AlertMessageComponent.new(message: t('ontology_details.concept.no_preferred_name_for_selected_language'),  type: "warning", closeable: false))
          - else
            - prefLabel = process_concept(@concept.prefLabel)
            - if prefLabel.is_a? String
              %p= prefLabel
            - else
              - prefLabel.each do |key, value|
                .d-flex.gap-12.align-items-center
                  %p= value
                  %span.badge.badge-light= key.upcase

      - unless @concept.synonym.nil? || @concept.synonym.empty?
        %tr
          %td{nowrap: ""}= t('ontology_details.concept.synonyms')
          %td
            - for synonym in @concept.synonym
              %p= synonym
          %td
            %div.synonym-change-request
              = add_synonym_button
              = remove_synonym_button
      
      
      - unless @concept.definition.nil? || @concept.definition.empty?
        %tr
          %td{nowrap: ""}= t('ontology_details.concept.definitions')
          %td
            %p= @concept.definition.join(" ")
     
      
      - if @concept.obsolete?
        %tr
          %td{nowrap: ""}= t('ontology_details.concept.obsolete')
          %td
            %p true
      - if skos?
        - unless @concept.memberOf.nil?  || @concept.memberOf.empty?
          %tr
            %td{nowrap: ""}= t('ontology_details.concept.member_of')
            %td
              %div.my-1
                - @concept.memberOf.each do |v|
                  = raw get_link_for_collection_ajax(v, @ontology.acronym, '_blank')
        - unless @concept.inScheme.nil?  || @concept.inScheme.empty?
          %tr
            %td{nowrap: ""}= t('ontology_details.concept.in_schemes')
            %td
              %div.my-1
                - @concept.inScheme.each do |v|
                  = raw get_link_for_scheme_ajax(v, @ontology.acronym, '_blank')
      %tr
        %td{nowrap: ""}= t('ontology_details.concept.type')
        %td
          %p= @concept.type

    - scheme_set = c.properties_set_by_keys(schemes_keys, c.concept_properties)
    - label_xl_set = c.properties_set_by_keys(label_xl_set, c.concept_properties)
    - c.section do
      = c.render_properties(scheme_set, c.concept_properties) do |v|
        - get_link_for_scheme_ajax(v, @ontology.acronym, '_blank')
    - c.section do
      = c.render_properties(label_xl_set, c.concept_properties) do |v|
        - get_link_for_label_xl_ajax(v, @ontology.acronym, @concept.id)
