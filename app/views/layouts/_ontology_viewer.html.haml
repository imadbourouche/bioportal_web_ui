- content_section = current_section
- concept_title = @concept.nil? ? "" : " - #{@concept.prefLabel} - Classes"
- @title = "#{@ontology.name}#{concept_title}"

- sub = @submission_latest
- details_available = true
- if sub.nil? || (sub.respond_to?(:status) && sub.status == 404)
  - details_available = false

= render :partial =>'layouts/header'
%div#bd.bg-white
  :javascript
    // Javascript History HTML5 API
    if ( typeof JSON === 'undefined' ) {
      var
        url = '/javascripts/history/json2.js',
        scriptEl = document.createElement('script');
      scriptEl.type = 'text/javascript';
      scriptEl.src = url;
      document.body.appendChild(scriptEl);
    }

    // Ontology viewer vars
    jQuery(document).data().bp.ont_viewer = {};
    jQuery(document).data().bp.ont_viewer.ontology_id = jQuery(document).data().bp.ontology.acronym;
    jQuery(document).data().bp.ont_viewer.ontology_version_id = jQuery(document).data().bp.submission_latest.submissionId;
    jQuery(document).data().bp.ont_viewer.ontology_name = "#{@ontology.name}";
    jQuery(document).data().bp.ont_viewer.org_site = "#{$ORG_SITE}";
    jQuery(document).data().bp.ont_viewer.concept_id = "#{params[:conceptid] || (@concept ? @concept.id : 'root')}";
    jQuery(document).data().bp.ont_viewer.content_section = "#{sanitize(h(content_section))}";
    jQuery(document).data().bp.ont_viewer.concept_param = "#{"conceptid=\#{params[:conceptid]}" unless params[:conceptid].nil? || params[:conceptid].empty?}";
    jQuery(document).data().bp.ont_viewer.concept_name = "#{@concept.prefLabel unless @concept.nil?}";
    jQuery(document).data().bp.ont_viewer.metadata_only = "#{@ontology.summaryOnly}";
    jQuery(document).data().bp.ont_viewer.current_purl = "#{@current_purl}";
    jQuery(document).data().bp.ont_viewer.purl_prefix = "#{($PURL_ENABLED ? $PURL_PREFIX+"/"+@ontology.acronym : '')}";
    jQuery(document).data().bp.ont_viewer.concept_name_title = (jQuery(document).data().bp.ont_viewer.concept_name == "") ?
        "" : " - " + jQuery(document).data().bp.ont_viewer.concept_name;

    var nav_ont = function (link) {
      const page = jQuery(link).attr("data-bp-ont-page");
      const page_name = jQuery(link).attr("data-bp-ont-page-name");
      History.pushState({p: page}, page_name + " | " + jQuery(document).data().bp.ont_viewer.org_site, "?p=" + page);
    }

    jQuery(document).ready(() => {
      jQuery("#navbar-ontology a").on("click", function (e) {
        e.preventDefault();
        nav_ont(this)
      });
    })



  = render TurboModalComponent.new(id: 'application_modal')

  -# Modal dialog for getting a permanent link to a class (must reside in a top-level position in the document to display properly).
  %div#classPermalinkModal{class: "modal fade", tabindex: "-1", role: "dialog", aria: {labelledby: "classPermalinkLabel", hidden: "true"}}
    %div.modal-dialog.modal-dialog-centered.modal-lg{role: "document"}
      %div.modal-content
        %div.modal-header
          %h5#classPermalinkLabel.modal-title Permanent link to this class
          %button.close{type: "button", "data-dismiss": "modal", "aria-label": "Close"}
            %span{"aria-hidden": "true"} &times;
        %div.modal-body
          = text_field_tag("purl_input", nil, class: "form-control")
        %div.modal-footer
          %button.btn.btn-secondary{"data-dismiss": "modal"} Close

  = render partial: 'kgcl_dialogs'

  %div.pt-md-3.pb-md-2.p-2
    %div.d-flex.w-100.justify-content-center
      = render partial: 'layouts/ontology_viewer/header'

  %div.row.pb-4
    %div.col
      %div.card
        %div.card-header
          - sections = sections_to_show
          -# Tabbed navigation bar for ontology content sections
          %ul.nav.nav-tabs.card-header-tabs{id: "navbar-ontology", role: "tablist"}
            - sections.each do |section|
              %li.nav-item
                = link_to(section_name(section) , ontology_path(@ontology.acronym, p: section),
                        id: "ont-#{section}-tab", class: "nav-link #{selected_section?(section) ? 'active show' : ''}",
                        data: {toggle: "tab", target: "#ont_#{section}_content", 'bp-ont-page': section ,
                        'bp-ont-page-name': ontology_viewer_page_name(@ontology.name, @concept&.prefLabel || '', section) })
        %div.card-body
          %div.tab-content
            - sections.each do |section|
              %div.tab-pane{id: "ont_#{section}_content", class: selected_section?(section) ? 'active show' : ''}
                = lazy_load_section(section) do
                  - yield

  = render partial: "layouts/footer"

</body>
</html>
