- if params[:pop].eql?("true")
  - pop = true
- unless @errors.nil?
  %div{:style => "color:red;margin-bottom:1em;"}
    Errors On Form
    %ul
      - for error in @errors
        %li= error
= form_tag('/feedback') do
  -# Simulate form_for by providing a hidden field to check for submission
  = hidden_field_tag 'sim_submit', 'true'
  = hidden_field_tag("pop", pop)
  .d-flex.m-3
    .feedback-form.w-100
      - unless session[:user].nil?
        %p.feedback-text
          Hi
          %font 
            = session[:user].username
            ,
      %p
        Support is available for Questions, Error reports, Feature requests, Ontology submissions, etc.
        Please include the following:
        %ul
          %li Your email, so we can respond.
          %li If you are describing an error, details of how the error occurred, including:
          %li URL of the page resulting in the error
          %li Exact steps to replicate the error
          %li Full error message, if any
          %li
            You can use the form below or email us at
            %a{:href => "mailto: #{$SUPPORT_EMAIL}"}= $SUPPORT_EMAIL
      - if session[:user].nil?
        %p.feedback-input-title
          Email
          %font{:color => "red"} *
        %input.feedback-input{:name => "email", :type => "email"}/
        %p.feedback-input-title
          Name
          %font.register-optional (optional)
        %input.feedback-input{:name => "name", :type => "text"}/
      - else
        = hidden_field_tag "name", session[:user].username
        = hidden_field_tag "email", session[:user].email
      %p.feedback-input-title
        Error/Proposition page URL
        %font.register-optional (optional)
      %input.feedback-input{:name => "location", :type => "text", :value => unescape(params[:location] || '')}
      %p.feedback-input-title
        Comment
        %font{:color => "red"} *
      %textarea.feedback-input{:name => "comment", :rows => "6"}
      %p.feedback-input-title
        Tags
        %font.register-optional (optional)
      .feedback-checks
        = render(ChipsComponent.new(name:"bug", value: "Bug"))
        = render(ChipsComponent.new(name:"proposition", value: "Proposition"))
        = render(ChipsComponent.new(name:"question", value: "Question"))
        = render(ChipsComponent.new(name:"ontology_submissions_request", value: "Ontology submissions request"))
      - if using_captcha?
        = recaptcha_tags  
      %input.feedback-button{:type => "submit", :value => "Send"}/
