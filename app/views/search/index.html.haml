.search-page-container 
  .search-page-subcontainer{'data-controller': 'search'}
    = form_tag(search_path, method: :get, 'data-turbo': true) do
      .search-page-input-container{'data-controller': 'reveal'}
        .search-page-input
          %input{type:"text", placeholder:"Enter a term, e.g. Melanoma", name: "q", value: @search_query}
          %button.search-page-button{type:'submit'}
            = inline_svg_tag 'icons/search.svg'

        .search-page-advanced{'data-search-target': 'advancedOptions', class: "#{@advanced_options_open ? '' : 'd-none'}"}
          .left
            .filter-container
              .title
                Search language
              .field
                = search_language_selector(name: 'lang', selected: params[:lang])
            .filter-container
              .title
                = t("search.categories")
              .field
                = render Input::SelectComponent.new(id: 'search-categories', name: 'categories[]', value: categories_for_select, multiple: "multiple", selected: params[:categories])
                
            .filter-container
              .title
                = t("search.ontologies")
              .field

                = render Input::SelectComponent.new(id: 'search-ontologies', name: 'ontologies[]', value: @onts_for_select, multiple: "multiple", selected:  params[:ontologies])
          .right 
            .filter-container
              .title
                Include in search
              .d-flex
                = render(ChipsComponent.new(name: 'include_properties', label: 'Property values', checked:  params[:include_properties]))
                = render(ChipsComponent.new(name: 'obsolete', label: 'Obsolete classes', checked:  params[:obsolete]))
                = render(ChipsComponent.new(name: 'include_views', label: 'Ontology views', checked: params[:include_views]))

            .filter-container
              .title
                Show only
              .d-flex
                = render(ChipsComponent.new(name: 'exact_match', label: 'Exact Matches',  checked:  params[:exact_match]))
                = render(ChipsComponent.new(name: 'require_definition', label: 'Classes with definitions', checked: params[:require_definition]))
                
        .search-page-options
          - if @search_results
            .search-page-number-of-results 
              = "Match in #{@search_results.length} ontologies"
          .search-page-advanced-button.show-options{class: "#{@advanced_options_open ? 'd-none' : ''}",'data': {'action': 'click->search#show_advanced_options', 'search-target': 'showOptionsButton'}}
            .icon
              =inline_svg_tag 'icons/settings.svg'
            .text
              Show advanced options
          .search-page-advanced-button.hide-options{class: "#{@advanced_options_open ? '' : 'd-none'}", 'data': {'action': 'click->search#hide_advanced_options', 'search-target': 'hideOptionsButton'}}
            .icon
              =inline_svg_tag 'icons/hide.svg'
            .text
              hide advanced options
    - if @search_results
      .search-page-results-container
        - @search_results.each do |result|
          .search-page-result-element
            - title = "#{result[:title][:preflab]} - #{result[:title][:ontology]}"
            - id = result[:title][:id]
            - sub_number = result[:descendants].length
            - reuses_number = result[:reuses].length
            - link = result[:title][:link]
            - definition = result[:title][:definition]
            = render Display::SearchResultComponent.new(title: title, uri: id, sub_number: sub_number ,reuses: reuses_number, link: link, definition: definition) do |c|
              - result[:descendants].each do |d|
                - c.subresult(title: d[:preflab] , uri: d[:id], link: d[:link] ,is_sub_component: true)
              - result[:reuses].each do |r|
                - reuse_title = "#{r[:title][:preflab]} - #{r[:title][:ontology]}"
                - reuse_id =  r[:title][:id]
                - reuse_link = r[:title][:link]
                - reuse_definition = r[:title][:definition]
                - c.reuse(title: reuse_title, uri: reuse_id, link: reuse_link, definition: reuse_definition, sub_number: r[:decendants].length ,is_sub_component: true) do |b|
                  - r[:decendants].each do |dd|
                    - b.subresult(title: dd[:preflab], uri: dd[:id], definition: dd[:definition], link: dd[:link] , is_sub_component: true)
                  

    - if @no_results    
      .browse-empty-illustration
        %img{:src => "#{asset_path("empty-box.svg")}"}
        %p No result was found
          

