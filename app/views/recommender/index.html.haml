.recommender-page-container
  .recommender-page-subcontainer
    .recommender-page-title
      .text
        Recommender
      .line
    .recommender-page-decription
      Get recommendations for the most relevant ontologies from an excerpt of text or a list of keywords
    .recommender-page-inputs{'data-controller': 'reveal-component'}
      .inputs 
        .recommender-page-text-area
          %textarea#recommender-text-area{rows: "4" , placeholder: 'Enter or past a text to be annotated ...', name: "text", oninput: 'handleInput(event)'}
          .insert-sample-text-button
            .button
              .text
                Insert sample text
              = inline_svg_tag 'icons/arrow-curved-up.svg'
        .recommender-page-options
          .section-text
            Options
          .input
            .title
              input
            .radios
              .text-choice
                = render Input::RadioChipComponent.new(label: 'Text', name: 'input-choice', value: 'text', checked: true)
              .keywords-choice
                = render Input::RadioChipComponent.new(label: 'Keywords', name: 'input-choice', value: 'keywords')
          .output
            .title
              output
            .radios
              .ontologies-choice
                = render Input::RadioChipComponent.new(label: 'Ontologies', name: 'output-choice', value: 'text', checked: true)
              .ontology-sets-choice
                = render Input::RadioChipComponent.new(label: 'Ontology sets', name: 'output-choice', value: 'text')
          .advanced-options-button{'data-action': 'click->reveal-component#show', 'data-reveal-component-target': 'showButton'}
            = inline_svg_tag "icons/settings.svg"
            .text 
              Show advanced options
          .advanced-options-button.d-none{'data-action': 'click->reveal-component#hide', 'data-reveal-component-target': 'hideButton'}
            = inline_svg_tag 'icons/hide.svg'
            .text 
              Hide advanced options
            
      .recommender-advanced-options.d-none{'data-reveal-component-target': 'item'}
        .weights-configuration
          .title 
            Weights configuration
          .inputs-container
            .input
              = render Input::NumberComponent.new(label: "Converage", name: "converage", value: 0.55)
            .input
              = render Input::NumberComponent.new(label: "Acceptance", name: "acceptance", value: 0.15)
            .input
              = render Input::NumberComponent.new(label: "Knowledge detail", name: "knowledge-detail", value: 0.15)
            .input
              = render Input::NumberComponent.new(label: "Specialization", name: "specialization", value: 0.15)
        .ontologies-configuration
          .title 
            Ontologies configuration
          .inputs-container
            .input
              = render Input::NumberComponent.new(label: "Maximum number of ontologies per set", name: "max-ont-per-set", value: 0.55)
            .input
              - get_ontologies_data
              = render Input::SelectComponent.new(label: "Select ontologies", id: 'ontologies', name: 'ontologies', value: @onts_for_select, multiple: "multiple")
        

      .recommender-page-button
        = render Buttons::RegularButtonComponent.new(id:'recommender', value: "Get recommendations", variant: "primary")
    .recommender-page-results 
      .title
        Recommended ontologies
      .recommender-table-container
        = render TableComponent.new(id: 'recommender-table', borderless: true, layout_fixed: true, small_text: true, outline: true, sort: true) do |t|
          - t.header do |h|
            - @results_table_header.each do |header|
              - h.th do
                = header

          - t.row do |r|
            - r.td do
              = render Display::ProgressBarComponent.new(progress: '60') 

            - r.td do
              = render Display::ProgressBarComponent.new(progress: '10') 
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
          
          - t.row do |r|
            - r.td do
              = render Display::ProgressBarComponent.new(progress: '50')
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'
            - r.td do
              = 'a'



      

:javascript
  function handleInput(event) {
    var selectedInputChoice = document.querySelector('input[name="input-choice"]:checked').value;
    if (selectedInputChoice === "keywords"){
      const textarea = document.getElementById('recommender-text-area');
      const value = textarea.value;
      const lastCharIsSpace = event.data === ' ';
      const formattedValue = lastCharIsSpace ? value.trim() + ', ' : value;
      textarea.value = formattedValue;
    }

  }