- divId = "review_table_container_#{@review.hash}"
%div.ontology_review{:id => divId}
  %table.zebra{:cellpadding => "0", :cellspacing => "0", :id => "review_table_#{@review.hash}", :style => "margin-bottom: 1em; width: 100%; box-sizing: border-box;"}
    %thead
      %tr
        %th
          Review By #{@review.creator.split("/").last}
          on #{DateTime.parse(@review.created).strftime('%m/%d/%Y')}
          - if isOwner?(@review.creator)
            &nbsp;
            &nbsp;
            %button.btn.btn-sm.delete-review{data: {review: @review.id}}
              %i.fa.fa-trash
            %button.btn.btn-sm.edit-review{data: {review: @review.id}}
              %i.fa.fa-edit
            %img.individual_review_spinner{src: asset_path("jquery.simple.tree/spinner.gif"), style: "visibility: hidden"}
    %tbody
      %tr
        %td
          .star_ratings{:style => "padding: .5em .5em .3em;"}
            - ratings = organize_ratings(@review)
            - if !ratings.any? {|r| r[:value] > 0}
              No ratings submitted with this review
            - else
              %ul
                - ratings.each_with_index do |rating, rating_count|
                  - next if rating[:value].to_i.eql?(0)
                  %li
                    - (1..5).each do |i|
                      - checked = rating[:value].to_i.eql?(i) ? "checked" : ""
                      = radio_button "review[#{@review.hash}]", rating[:name], "", class: "star", name: "review_#{@review.hash}_star_#{rating_count}", checked: checked, disabled: "disabled"
                    %b
                      \&nbsp;#{rating[:name].capitalize}

          %p
            = @review.body
:javascript
  // Do this after the HTML above loads
  jQuery('div#' + '#{divId} input.star').rating();
