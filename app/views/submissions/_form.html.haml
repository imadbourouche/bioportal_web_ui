- button_text ||= "Add submission"
- title_text ||= "Add New Submission"

- unless @errors.nil?
  .enable-lists{:style => "color:red;"}
    %strong Errors On Form
    %ul
      - for error in @errors
        %li
          = error
%div{:style => "width:500px"}
  %span.asterik{:style => "float:right;"} * fields are required
  %h1 #{title_text}
  = hidden_field :submission, :ontology, value: @ontology.id
  %table#new_ontology.form{style: "min-width: 800px;"}
    %tr
      %th
        Description
        %span.asterik *
      %td
        = text_area :submission, :description, rows: 5, value: @submission.description, :required => true

    %tr
      %th
        Format
        %span.asterik *
      %td
        - ont_formats = [ "OBO", "OWL", "UMLS", "SKOS" ].sort
        - selected = @submission.hasOntologyLanguage ? @submission.hasOntologyLanguage : "OWL"
        = select("submission", "hasOntologyLanguage", ont_formats, { :selected => selected, :style => "width: 200px;", :required => true })
        #format_spacing
        %table#format_specific_options
          %tbody#owl_options.format_options
            %tr
              %th
                Prefered Name Property
                %br/
                %span.default_owl
                  default:
                  %a{:href => "http://www.w3.org/2004/02/skos/core#prefLabel", :target => "_blank"} http://www.w3.org/2004/02/skos/core#prefLabel
              %td
                = text_field :submission, :prefLabelProperty, :placeholder => 'use default', value: @submission.prefLabelProperty
            %tr
              %th
                Synonym Property
                %br/
                %span.default_owl
                  default:
                  %a{:href => "http://www.w3.org/2004/02/skos/core#altLabel", :target => "_blank"} http://www.w3.org/2004/02/skos/core#altLabel
              %td
                = text_field :submission, :synonymProperty, :placeholder => 'use default', value: @submission.synonymProperty
            %tr
              %th
                Definition Property
                %br/
                %span.default_owl
                  default:
                  %a{:href => "http://www.w3.org/2004/02/skos/core#definition", :target => "_blank"} http://www.w3.org/2004/02/skos/core#definition
              %td
                = text_field :submission, :definitionProperty, :placeholder => 'use default', value: @submission.definitionProperty
            %tr
              %th
                Author Property
                %br/
                %span.default_owl
                  default:
                  %a{:href => "http://purl.org/dc/elements/1.1/creator", :target => "_blank"} http://purl.org/dc/elements/1.1/creator
              %td
                = text_field :submission, :authorProperty, :placeholder => 'use default', value: @submission.authorProperty
            %tr{:style => "border-left: none;"}
              %td{:colspan => "2", :style => "border-left: none; border-right: none; padding: 1.5em 0 .5em;"}
                %b Determining Obsolete Classes
                You can use the following two methods to identify obsolete classes in your ontology:
                %br/
                1. Designate a root ID for an obsolete branch.
                %br/
                2. Identify a property id that indicates obsolete status. The value must be set to "true".
            %tr
              %th
                1. Root of obsolete branch (root is not obsolete)
              %td
                = text_field :submission, :obsoleteParent, value: @submission.obsoleteParent
            %tr
              %th
                2. Property to check for obsolete status
              %td
                = text_field :submission, :obsoleteProperty, value: @submission.obsoleteProperty
    %tr
      %th
        Version
      %td
        = text_field :submission, :version, value: @submission.version
    %tr
      %th
        Status
        %span.asterik *
      %td
        - selected_status = @submission.status ? @submission.status : "alpha"
        - status_options = ["alpha", "beta", "production", "retired"]
        = select :submission, :status, status_options, { :selected => selected_status, :required => true }
    %tr
      %th
        Release Date
        %span.asterik *
      %td
        - release_date = @submission.released ? @submission.released : DateTime.now.to_s
        = text_field :submission, :released, id: "datepicker", value: "#{ l(Date.parse(release_date), format: :year_month_day_concise) }", required: true
        %span{:style => "font-size: 90%; color: grey;"}
    %tr
      %th
        Location
        %span.asterik *
      %td#location_options
        - if !@masterFileOptions
          - checked = @ontology.summaryOnly
          = radio_button :submission, :isRemote, 3, :onclick=>"$('.hidden_field').hide();", checked: checked
          Metadata Only
          %br/
          %span{:style => "font-size:11px;"}
            (choose this option if you want users to search and view only the
            %em metadata
            for your ontology, but not its classes and properties)
          %hr/

          - checked = !( @submission.pullLocation.nil? || @submission.pullLocation.empty? )
          = radio_button :submission, :isRemote, 1, :onclick=>"location_toggle('remote');", checked: checked
          Load from URL
          %br/
          %span{:style => "font-size:11px;"} (new versions loaded daily)
          - display = (checked and "" or "display:none;")
          %div.hidden_field#remote{style: display}
            URL: #{text_field :submission, :pullLocation, :size => 100, value: @submission.pullLocation}
          %hr/

          - checked = (!@ontology.summaryOnly) && @submission.pullLocation.nil?
          = radio_button :submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: checked
          Upload Local File
          %br/
          %span{:style => "font-size:11px;"} (choose a file on your local file system to upload)
          - display = (checked and "" or "display:none;")
          %div.hidden_field#upload{style: display}
            #{f.file_field :filePath}

        - else
          = radio_button :submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: true
          Upload Local File
          %br/
          %span{:style => "font-size:11px;"} (choose a file on your local file system to upload)
          - display = (checked and "" or "display:none;")
          %div#upload{style: display}
            = f.file_field :filePath, required: true
            = f.select("masterFileName", @masterFileOptions, { include_blank: "Select primary file from zip contents", required: true}, {style: "border-color: red;"})

    %tr
      %th
        Contact
        %span.asterik *
      %td
        %div#contacts
          %div#contact_button{style: "float: right; margin-top -1em;"}
            = button_to 'Add contact', '#', id: 'add_contact_button'
          - if @submission.contact && @submission.contact.size > 0
            - @submission.contact.each_with_index do |contact, i|
              %div.contact
                Name:&nbsp;
                = text_field :submission, :"contact[#{i}][name]", value: contact["name"]
                &nbsp;&nbsp;
                Email:&nbsp;
                = text_field :submission, :"contact[#{i}][email]", value: contact["email"]
          - else
            %div.contact
              Name:&nbsp;
              = text_field :submission, :"contact[0][name]", :required => true
              %br
              Email:&nbsp;
              = text_field :submission, :"contact[0][email]", :required => true

    %tr
      %th
        Home Page
      %td
        = text_field :submission, :homepage, value: @submission.homepage
    %tr
      %th
        Documentation Page
      %td
        = text_field :submission, :documentation, value: @submission.documentation
    %tr
      %th
        Publications Page
      %td
        = text_field :submission, :publication, value: @submission.publication
    %tr
      %td{:align => "right", :colspan => "2"}
        = submit_tag button_text
