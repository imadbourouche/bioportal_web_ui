- unless @errors.nil?
  %div.form-group.row
    %div.col-sm-10.offset-sm-2.enable-lists{style: "color:red;"}
      %strong Errors On Form
      %ul
        - for error in @errors
          %li
            = error

= hidden_field :submission, :ontology, value: @ontology.id

%div.form-group.row
  %div.col-sm-12
    %label.col-form-label.font-italic{style: "color: red"} * Fields marked with an asterisk are required.

-# Description
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_description"}
    Description
    %span.asterik *
  %div.col-sm-10
    = text_area :submission, :description, rows: 5, value: @submission.description, required: true, class: "form-control"

-# Format
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_hasOntologyLanguage"}
    Format
    %span.asterik *
  %div.col-sm-10
    - ont_formats = ["OBO", "OWL", "UMLS", "SKOS"].sort
    - selected = @submission.hasOntologyLanguage ? @submission.hasOntologyLanguage : "OWL"
    -# TODO: Add/remove aria-describedby attribute for SKOS help text display
    = select "submission", "hasOntologyLanguage", options_for_select(ont_formats, selected), {required: true}, {class: "form-control"}
    %small.form-text.text-muted#helpSkosFormat
      SKOS vocabularies submitted to EcoPortal must contain a minimum of one concept scheme and top concept assertion.
      Please refer to the NCBO wiki for a more <a href="https://www.bioontology.org/wiki/SKOSSupport", target="_blank">detailed explanation</a> with examples.
%div.form-group.row
  %div.col-sm-10.offset-sm-2
    %a#collapseOWLOptions{href: "#owl-options", role: "button", data: {toggle: "collapse"}, aria: {expanded: "false", controls: "owl-options"}, |
    class: "btn btn-primary"} Show advanced OWL options |

-# Optional property overrides for OWL ontologies
%div#owl-options.collapse
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{style: "font-weight: bold"} Customize default property settings

  -# Preferred name
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_prefLabelProperty"} Preferred name
      = text_field :submission, :prefLabelProperty, value: @submission.prefLabelProperty, class: "form-control form-control-sm", aria: {describedBy: "preferredNameHelpBlock"}
      %small.form-text.text-muted#preferredNameHelpBlock
        Enter a property ID, or use the default setting: |
        <a href="http://www.w3.org/2004/02/skos/core#prefLabel" target="_blank">http://www.w3.org/2004/02/skos/core#prefLabel</a>. |

  -# Synonym
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_synonymProperty"} Synonym
      = text_field :submission, :synonymProperty, value: @submission.synonymProperty, class: "form-control form-control-sm", aria: {describedBy: "synonymHelpBlock"}
      %small.form-text.text-muted#synonymHelpBlock
        Enter a property ID, or leave blank to use the default setting: |
        <a href="http://www.w3.org/2004/02/skos/core#altLabel" target="_blank">http://www.w3.org/2004/02/skos/core#altLabel</a>. |

  -# Definition
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_definitionProperty"} Definition
      = text_field :submission, :definitionProperty, value: @submission.definitionProperty, class: "form-control form-control-sm", aria: {describedBy: "definitionHelpBlock"}
      %small.form-text.text-muted#definitionHelpBlock
        Enter a property ID, or leave blank to use the default setting: |
        <a href="http://www.w3.org/2004/02/skos/core#definition" target="_blank">http://www.w3.org/2004/02/skos/core#definition</a>. |

  -# Author
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_authorProperty"} Author
      = text_field :submission, :authorProperty, value: @submission.authorProperty, class: "form-control form-control-sm", aria: {describedBy: "authorHelpBlock"}
      %small.form-text.text-muted#authorHelpBlock
        Enter a property ID, or leave blank to use the default setting: |
        <a href="http://purl.org/dc/elements/1.1/creator" target="_blank">http://purl.org/dc/elements/1.1/creator</a>. |

  -# Obsolete classes
  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{style: "font-weight: bold"} Identify obsolete classes

  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_obsoleteProperty"} Obsolete property
      = text_field :submission, :obsoleteProperty, value: @submission.obsoleteProperty, class: "form-control form-control-sm", aria: {describedBy: "obsoleteHelpBlock"}
      %small.form-text.text-muted#obsoleteHelpBlock
        Optionally enter a property ID that indicates obsolete status for ontology classes |
        (the property value must be set to "true"). Note that by default, BioPortal checks for existence of the owl:deprecated property. |

  %div.form-group.row
    %div.col-sm-10.offset-sm-2
      %label{for: "submission_obsoleteParent"} Obsolete branch root
      = text_field :submission, :obsoleteParent, value: @submission.obsoleteParent, class: "form-control form-control-sm", aria: {describedBy: "obsoleteRootHelpBlock"}
      %small.form-text.text-muted#obsoleteRootHelpBlock
        Optionally enter a class ID for the root of an obsolete branch. All classes in the branch will be marked as |
        obsolete, with the exception of the root class. |

-# Version
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_version"} Version
  %div.col-sm-10
    = text_field :submission, :version, value: @submission.version, class: "form-control"

-# Status
%div.form-group.row
  %label.col-sm-2.col-form-lable{for: "submission_status"}
    Status
    %span.asterik<> *
  %div.col-sm-10
    - selected_status = @submission.status ? @submission.status : "alpha"
    - status_options = ["alpha", "beta", "production", "retired"]
    = select :submission, :status, status_options, {selected: selected_status, required: true}, class: "form-control"

-# Release date
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "datepicker"}
    Release date
    %span.asterik<> *
  %div.col-sm-10
    %div.input-group
      - release_date = @submission.released ? Date.parse(@submission.released) : Date.today
      = text_field(:submission, :released, id: "datepicker", value: "#{l(release_date, format: :month_day_year)}", required: true, class: "form-control", readonly: "readonly")
      %div.input-group-append
        %span.input-group-text
          %i{class: "fas fa-calendar-alt fa-lg", aria: {hidden: "true"}}

-# Location
%div#submissionLocation.form-group.row
  %label.col-sm-2.col-form-label.pt-0
    Location
    %span.asterik *
  %div.col-sm-10
    - if !@masterFileOptions
      %div.form-check
        - checked = @ontology.summaryOnly
        = radio_button(:submission, :isRemote, 3, :onclick=>"$('.hidden_field').hide();", checked: checked, aria: {describedBy: "metadataHelpBlock"}, class: "form-check-input")
        %label.form-check-label{for: "submission_isRemote_3"}
          Metadata only
        %small.form-text.text-muted#metadataHelpBlock Allow users to view and search your ontology metadata, but not its classes and properties.
      %div.form-check
        - checked = !(@submission.pullLocation.nil? || @submission.pullLocation.empty?)
        = radio_button(:submission, :isRemote, 1, :onclick=>"location_toggle('remote');", checked: checked, aria: {describedBy: "loadFromURLHelpBlock"}, class: "form-check-input")
        %label.form-check-label{for: "submission_isRemote_1"}
          Load from URL
        %small.form-text.text-muted#loadFromURLHelpBlock New versions loaded on a nightly basis.
        - display = (checked and "" or "display:none;")
        %div.hidden_field#remote{style: display}
          = text_field(:submission, :pullLocation, value: @submission.pullLocation, aria: {describedBy: "enterURLHelpBlock"}, class: "form-control")
          %small.form-text.text-muted#enterURLHelpBlock Enter a URL, including the name of your ontology source file, e.g., http://www.example.com/my_ontology.owl.
      %div.form-check
        - checked = (!@ontology.summaryOnly) && @submission.pullLocation.nil?
        = radio_button(:submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: checked, class: "form-check-input")
        %label.form-check-label{for: "submission_isRemote_0"}
          Upload local file
        - display = checked ? "" : "display:none;"
        %div.hidden_field#upload{style: display}
          %label.btn.btn-primary{for: "submission_filePath"} Choose File
          %span#submission_filePathVisualization
          %div{style: "display: none"}
            = f.file_field(:filePath, class: "mt-2")
    - else
      -# TODO: Has this section of code actually been tested?
      = radio_button :submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: true
      Upload Local File
      %br/
      %span{:style => "font-size:11px;"} (choose a file on your local file system to upload)
      - display = checked ? "" : "display:none;"
      %div#upload{style: display}
        %label.btn.btn-primary
          Choose file
          = f.file_field :filePath, required: true
        = f.select("masterFileName", @masterFileOptions, { include_blank: "Select primary file from zip contents", required: true}, {style: "border-color: red;"})

-# Contact(s)
%div#contacts.form-group.row
  %label.col-sm-2.col-form-label
    Contact(s)
    %span.asterik *
  - if @submission.contact && @submission.contact.size > 0
    - @submission.contact.each_with_index do |contact, i|
      - if i == 0
        -# Contact div
        %div.col-sm-10.d-flex.align-items-top.contact
          %label Name
          %div.formControlErrorContainer
            = text_field :submission, :"contact[#{i}][name]", value: contact["name"], class: "form-control", required: true
          %label Email
          %div.formControlErrorContainer
            = email_field :submission, :"contact[#{i}][email]", value: contact["email"], class: "form-control", required: true
          %button.btn.btn-primary.add-contact
            %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}
      - else
        -# TODO
        -# Secondary contacts need to be offset by 2 columns, and have a delete button.
        %div.col-sm-10.d-flex.align-items-top.offset-sm-2.contact
          %label Name
          %div.formControlErrorContainer
            = text_field :submission, :"contact[#{i}][name]", value: contact["name"], class: "form-control", required: true
          %label Email
          %div.formControlErrorContainer
            = email_field :submission, :"contact[#{i}][email]", value: contact["email"], class: "form-control", required: true
          %button.btn.btn-primary.add-contact
            %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}
          %button.btn.btn-primary.ml-1.remove-contact
            %i{class: "fas fa-minus fa-lg", aria: {hidden: "true"}}
  - else
    -# TODO
    %div.col-sm-10.d-flex.align-items-top.contact
      %label Name:
      %div.formControlErrorContainer
        = text_field :submission, :"contact[0][name]", class: "form-control", required: true
      %label Email:
      %div.formControlErrorContainer
        = email_field :submission, :"contact[0][email]", class: "form-control", required: true
      %button.btn.btn-primary.add-contact
        %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}

-# Home page
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_homepage"} Homepage
  %div.col-sm-10
    = url_field :submission, :homepage, value: @submission.homepage, class: "form-control", aria: {describedBy: "homepageHelpBlock"}
    %small.form-text.text-muted#homepageHelpBlock Enter a URL for the main page of your ontology.

-# Documentation page
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_documentation"} Documentation
  %div.col-sm-10
    = url_field :submission, :documentation, value: @submission.documentation, class: "form-control", aria: {describedBy: "docsHelpBlock"}
    %small.form-text.text-muted#docsHelpBlock Enter a URL for a page that provides ontology documentation.

-# Publications page
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_publication"}
    Publications
    %span.asterik *
  %div.col-sm-10
    = url_field :submission, :publication, value: @submission.publication, required: true, class: "form-control", aria: {describedBy: "pubsHelpBlock"}
    %small.form-text.text-muted#pubsHelpBlock Enter a URL for a page that lists publications about your ontology. Protocol is required (http://, https:// or ftp://).

%h2 New Metadata
%h2 Edit Submission Information

%div.form-group.row
  %div.col-sm-12
    %label.col-form-label.font-italic{style: "color: red"} * Fields marked with an asterisk are required.

/ *********************   DATACITE ****************************

/ IDENTIFIER 1
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_publisher"}
    Identifier
    %span.asterik<> *
  %div.col-sm-10.field-value-col{id: "identifier_fields_col"}
    - doi_already_assigned = false
    - if !@identifierRequest.nil?
      - if @identifierRequest.status == "PENDING"
        .row
          .col-sm-8.sub-label
            %p
              You have a new DOI pending request for this semantic resource. You can cancel this request before it is processed.
          .col-sm-4.sub-label
            %button.btn.btn-primary.btn-sm.btn_cancel_request{id: "btn_cancel_request-#{@identifierRequest.requestId}", access: "false", type: "button"}
              Cancel Request
      - elsif @identifierRequest.status == "PROCESSED" && (@identifierRequest.requestType == "DOI_CREATE" || @identifierRequest.requestType == "DOI_UPDATE")
        - doi_already_assigned = true
    - else
      / Manually insert Identifier
      %div.d-flex.align-items-top
        %label.float-right{for: "submission_identifierType"}
          Type:
          %span.asterik<> *
        %div.formControlErrorContainer
          - selected_identifierType = @submission.identifierType ? @submission.identifierType : "None"
          %select#submission_identifierType.form-control.input-sm.w100perc{name: "submission[identifierType]"}
            %option{value: "None", selected: selected_identifierType == "None"}= "None"
            %option{value: "DOI", selected: selected_identifierType == "DOI"}= "DOI"
            %option{value: "Other", selected: selected_identifierType == "Other"}= "Other"
          / <input class="w100perc" value="DOI" type="text" name="submission[identifierType]" id="submission_identifierType"/>
        %label{for: "submission_identifier"}
          Identifier:
          %span.asterik<> *
        %div.formControlErrorContainer
          %input#submission_identifier.form-control.input-sm.w100perc{name: "submission[identifier]", type: "text", value: @submission.identifier, required: "true"}/
        -# .col-sm-2
        -#   %button#button-load-by-doi.btn.btn-default.btn-sm{type: "button"}
        -#     %span.glyphicon.glyphicon-refresh
        -#     Load
      %div
        %small.form-text.text-muted Insert the Persistent Identifier - DOI or other - of your semantic asset
      - if !doi_already_assigned
        .div.margin-top-10px
          #div-cb-require-doi
            %input#doi_request{name: "submission[is_doi_requested]", type: "checkbox", checked: @submission.is_doi_requested}/
            %label{for: "doi_request"} Check this box if your asset has no PID and you want to request a DOI

/ CREATOR(s)
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "Creators"}
    Creator(s)
    %span.asterik<> *
  .col-sm-10
    #creators
      - unless @submission.creators && @submission.creators.size > 0
        - @submission.creators = []
        - @submission.creators << getEmptyCreatorObject()

      - @submission.creators.each_with_index do |creator, i|
        .row.row-creator{id: "creator-#{i}"}
          / CREATOR DATA
          .col-sm-12
            / RADIO BUTTON TO CHOOSE BETWEEN PERSONAL or ORGANIZATIONAL CREATOR
            .row.creatorType
              / <input type="hidden" id="submission_creators[0][nameType]" name="submission[creators[0][nameType]]" value="Personal">
              .col-sm-4.radio-xs
                %label.lbl-creatorType
                  - checked = creator.nameType == "Personal"
                  %input{id: "radio-creatorType-Personal-#{i}", checked: checked, name: "submission[creators[#{i}][nameType]]", onclick: "changeCreatorType(#{i})", type: "radio", value: "Personal"}/
                  Person
              .col-sm-4.radio-xs
                %label.lbl-creatorType
                  - checked = creator.nameType == "Organizational"
                  %input{id: "radio-creatorType-Organizational-#{i}", checked: checked, name: "submission[creators[#{i}][nameType]]", onclick: "changeCreatorType(#{i})", type: "radio", value: "Organizational"}/
                  Organization
              / BUTTON REMOVE CREATOR ROW
              .col-sm-offset-1.col-sm-3
                %button.btn.btn-primary.btn-sm{id: "button-remove-creator-#{i}", access: "false", onclick: "removeCreator('creator-#{i}')", type: "button"}
                  Remove This Creator
                  %i.fas.fa-trash-alt
            / CREATORS IDENTIFIER
            #creatorIdentifiers.sub-section
              %div{id: "creatorIdentifiers-#{i}"}
                - if creator.creatorIdentifiers && creator.creatorIdentifiers.size > 0
                  - creator.creatorIdentifiers.each_with_index do |creatorIdentifier, j|
                    .row.row-creatorIdentifier{id: "creatorIdentifier-#{i}_#{j}"}
                      .col-sm-11
                        .row.nested-row-values
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][creatorIdentifiers][#{j}][nameIdentifierScheme]"}
                              Scheme:
                              %span.asterik<> *
                          .col-sm-4
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][creatorIdentifiers][#{j}][nameIdentifierScheme]", name: "submission[creators[#{i}][creatorIdentifiers][#{j}][nameIdentifierScheme]]", type: "text", value: creatorIdentifier.nameIdentifierScheme, required: true}/
                            %small.form-text.text-muted Ex.: ISNI, ORCID
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][creatorIdentifiers][#{j}][schemeURI]"}
                              Scheme URI:
                              %span.asterik<> *
                          .col-sm-4
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][creatorIdentifiers][#{j}][schemeURI]", name: "submission[creators[#{i}][creatorIdentifiers][#{j}][schemeURI]]", type: "text", value: creatorIdentifier.schemeURI, required: true}/
                            %small.form-text.text-muted Ex.: http://isni.org/isni/, http://orcid.org/
                        .row.nested-row-values
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][creatorIdentifiers][#{j}][nameIdentifier]"}
                              Name Identifier:
                              %span.asterik<> *
                          .col-sm-10
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][creatorIdentifiers][#{j}][nameIdentifier]", name: "submission[creators[#{i}][creatorIdentifiers][#{j}][nameIdentifier]]", type: "text", value: creatorIdentifier.nameIdentifier, required: true}/
                            %small.form-text.text-muted Ex. ISNI: 0000000134596520 or Ex. ORCID: 0000-0001-5393-1421
                      / BUTTON REMOVE CREATOR IDENTIFIER ROW
                      .col-sm-1
                        %button.btn.btn-default.btn-sm.btn-remove-row{access: "false", id: "button-remove-creatorIdentifier-#{i}_#{j}", onclick: "removeCreatorIdentifier('creatorIdentifier-#{i}_#{j}')", type: "button"}
                          %i.fas.fa-trash-alt

                    / here will be added the creator creatorIdentifiers

              .row.row-creatorIdentifier-buttons
                .col-sm-11
                  %button#button-add-creatorIdentifier.btn.btn-primary{access: "false", onclick: "addCreatorIdentifier(#{i})", type: "button"}
                    %span.fas.fa-plus{"aria-hidden" => "true"}
                    Add Creator Identifier
            / PERSON
            - readonly = false
            - require_personal_fields = false
            - if creator.nameType == "Personal"
              - readonly = 'true'
              - require_personal_fields = 'required'
            .row.nested-row-values{id: "div-creator-personal-field-#{i}", style: !require_personal_fields ? "display:none" : nil}
              .col-sm-2
                %label.float-right.col-form-label{for: "submission_creators[#{i}][givenName]"}
                  First Name:
                  %span.asterik<> *
              .col-sm-4
                %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][givenName]", name: "submission[creators[#{i}][givenName]]", oninput: "updateCreatorName(#{i})", type: "text", value: creator.givenName, required: require_personal_fields}/
              .col-sm-2
                %label.float-right.col-form-label{for: "submission_creators[#{i}][familyName]"}
                  Surname:
                  %span.asterik<> *
              .col-sm-4
                %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][familyName]", name: "submission[creators[#{i}][familyName]]", oninput: "updateCreatorName(#{i})", type: "text", value: creator.familyName, required: require_personal_fields}/
            / ORGANIZATION
            .row.nested-row-values
              .col-sm-2
                %label.float-right.col-form-label{for: "submission_creators[#{i}][creatorName]"}
                  Name:
                  %span.asterik<> *
              .col-sm-10
                %input.form-control.input-sm.w100perc{readonly: readonly, id: "submission_creators[#{i}][creatorName]", name: "submission[creators[#{i}][creatorName]]", type: "text", value: creator.creatorName, required: true}/
            / AFFILIATION
            #affiliations.sub-section
              %div{id: "creatorAffiliations-#{i}"}
                - if creator.affiliations && creator.affiliations.size > 0
                  - creator.affiliations.each_with_index do |affiliation, j|
                    .row.row-creatorAffiliation{id: "creatorAffiliation-#{i}_#{j}"}
                      .col-sm-11
                        .row.nested-row-values
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][affiliations][#{j}][affiliationIdentifierScheme]"}
                              Scheme:
                              %span.asterik<> *
                          .col-sm-4
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][affiliations][#{j}][affiliationIdentifierScheme]", name: "submission[creators[#{i}][affiliations][#{j}][affiliationIdentifierScheme]]", type: "text", value: affiliation.affiliationIdentifierScheme, required: true}/
                            %small.form-text.text-muted Ex. ROR
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][affiliations][#{j}][affiliationIdentifier]"}
                              Affiliation Ident. URI:
                              %span.asterik<> *
                          .col-sm-4
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][affiliations][#{j}][affiliationIdentifier]", name: "submission[creators[#{i}][affiliations][#{j}][affiliationIdentifier]]", type: "text", value: affiliation.affiliationIdentifier, required: true}/
                            %small.form-text.text-muted Ex. https://ror.org/04wxnsj81
                        .row.nested-row-values
                          .col-sm-2
                            %label.float-right.lb-sm.col-form-label{for: "submission_creators[#{i}][affiliations][#{j}][affiliation]"}
                              Affiliation Name:
                              %span.asterik<> *
                          .col-sm-10
                            %input.form-control.input-sm.w100perc{id: "submission_creators[#{i}][affiliations][#{j}][affiliation]", name: "submission[creators[#{i}][affiliations][#{j}][affiliation]]", type: "text", value: affiliation.affiliation, required: true}/
                            %small.form-text.text-muted Enter the name of the formal institution to which the creator belongs, e.g. LifeWatch ERIC, DataCite, etc.
                      / BUTTON REMOVE CREATOR AFFILIATION ROW
                      .col-sm-1
                        %button.btn.btn-default.btn-sm.btn-remove-row{access: "false", id: "button-remove-creatorAffiliation-#{i}_#{j}", onclick: "removeCreatorAffiliation('creatorAffiliation-#{i}_#{j}')", type: "button"}
                          %i.fas.fa-trash-alt

                  / here will be added the creator affiliations
              .row.row-creatorAffiliation-buttons
                .col-sm-11
                  %button#button-add-creatorAffiliation.btn.btn-primary{onclick: "addCreatorAffiliation(#{i})", type: "button"}
                    %span.fas.fa-plus{"aria-hidden" => "true"}
                    Add Affiliation
        / here will be added the creators
    .row.row-creator-add-button
      .col-sm-5
        %button#button-add-creator.btn.btn-primary{access: "false", name: "button-add-creator", type: "button"}
          %span.fas.fa-plus{"aria-hidden" => "true"}
          Creator


/ TITLEs
%div.form-group.row
  %label.col-sm-2.col-form-label
    Title(s)
    %span.asterik<> *
  .col-sm-10
    #titles
      - unless @submission.titles && @submission.titles.size > 0
        - @submission.titles = []
        - @submission.titles << OpenStruct.new(title: "", lang: "en-En", titleType: "AlternativeTitle")
      - @submission.titles.each_with_index do |title, i|
        .row.row-title{id: "title-#{i}"}
          .col-sm-11
            / row for text title
            .row.nested-row-values
              .col-sm-2
                %label.float-right.col-form-label{for: "submission_titles[#{i}][title]"}
                  Title:
                  %span.asterik<> *
              .col-sm-10
                %input.form-control.input-sm.w100perc{id: "submission_titles[#{i}][title]", name: "submission[titles[#{i}][title]]", type: "text", value: title.title, required: true}/
            / row for text lang and type
            .row.nested-row-values
              .col-sm-2
                %label.float-right.col-form-label{for: "submission_titles[#{i}][lang]"}
                  Language:
                  %span.asterik<> *
              .col-sm-4
                - selected_title_lang = title.lang ? title.lang : "en-EN"
                %select.form-control.input-sm.w100perc{id: "submission_titles[#{i}][lang]", name: "submission[titles[#{i}][lang]]"}
                  %option{value: "en-EN", selected: selected_title_lang == "en-EN"}= "English"
                  %option{value: "it-IT", selected: selected_title_lang == "it-IT"}= "Italian"
                  %option{value: "fr-FR", selected: selected_title_lang == "fr-FR"}= "French"
                  %option{value: "de-DE", selected: selected_title_lang == "de-DE"}= "German"
                  %option{value: "es-ES", selected: selected_title_lang == "es-ES"}= "Spanish"
              .col-sm-1
                %label.float-right.col-form-label{for: "submission_titles[#{i}][titleType]"} Type:
              .col-sm-5
                - selected_title_titleType = title.titleType ? title.titleType : "en-EN"
                %select.form-control.input-sm.w100perc{id: "submission_titles[#{i}][titleType]", name: "submission[titles[#{i}][titleType]]"}
                  %option{value: "AlternativeTitle", selected: selected_title_titleType == "AlternativeTitle"}= "Alternative Title"
                  %option{value: "Subtitle", selected: selected_title_titleType == "Subtitle"}= "Subtitle"
                  %option{value: "TranslatedTitle", selected: selected_title_titleType == "TranslatedTitle"}= "Translated Title"
                  %option{value: "Other", selected: selected_title_titleType == "Other"}= "Other"
          .col-sm-1.div-btn-remove
            %button.btn.btn-primary.btn-remove-title{id: "button-remove-title-#{i}", access: "false", onclick: "removeTitle('title-#{i}')", type: "button"}
              %i.fas.fa-trash-alt
    / ADD NEW TITLE HERE
    .row.row-title-add-button
      .col-sm-5
        %button#button-add-title.btn.btn-primary{access: "false", type: "button"}
          %span.fas.fa-plus{"aria-hidden" => "true"}
          Title

/ PUBLISHER
%div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_publisher"}
    Publisher
    %span.asterik<> *
  %div.col-sm-10
    = text_field :submission, :publisher, value: @submission.publisher, required: true, class: "form-control"

/ PUBLICATION YEAR
.div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_publicationYear"}
    Publication Year
    %span.asterik<> *
  %div.col-sm-10
    = number_field :submission, :publicationYear, value: @submission.publicationYear, required: true, class: "form-control"

/ RESOURCE TYPE
.div.form-group.row
  %label.col-sm-2.col-form-label{for: "submission_resourceType"}
    Resource Type
    %span.asterik<> *
  %div.col-sm-10.d-flex.align-items-top.row-resourceType
    %label{for: "submission_resourceTypeGeneral", style: "white-space: nowrap"} General Type:
    - selected_resourceTypeGeneral = @submission.resourceTypeGeneral ? @submission.resourceTypeGeneral : "Dataset"
    %div.formControlErrorContainer
      %select#submission_resourceTypeGeneral.form-control{name: "submission[resourceTypeGeneral]"}
        %option{value: "Dataset", selected: selected_resourceTypeGeneral == "Dataset"}= "Dataset"
        %option{value: "Other", selected: selected_resourceTypeGeneral == "Other"}= "Other"
    %label{for: "submission_resourceTypeGeneral", style: "white-space: nowrap"}
      Resource Type:
      %span.asterik<> *
    %div.formControlErrorContainer
      %input#submission_resourceType.form-control{name: "submission[resourceType]", type: "text", value: @submission.resourceType, required: true}

%div.form-group.row
  %div.col-sm-10.offset-sm-2
    %div.form-inline.justify-content-center{style: "margin-top: 2em"}
      = submit_tag button_text, class: "btn btn-primary mr-sm-2"
      = link_to "Cancel", :back, class: "btn btn-primary"

-# ECOPORTAL - NEW JAVASCRIPT - BEGIN
:javascript

  function addInput(attr, inputType)
  {
    var container = document.createElement("div");
    container.innerHTML = '<input type="' + inputType + '" name="submission[' + attr + '][]" id="submission_' + attr + '" style="margin-bottom: 0.3em;"><br>';
    document.getElementById(attr + 'Div').appendChild(container);
  }

  /**
   * To add a new value to selectDropdown when btn clicked
   */
  function addValueToSelect(attr)
  {
    if(jQuery('#add_' + attr).val()) {
      var newOption = jQuery('#add_' + attr).val();
      var selectedOptions = jQuery('#select_' + attr).val();
      jQuery('#select_' + attr).append(jQuery('<option>', {
        value: newOption,
        text: newOption
      }));
      if (selectedOptions.constructor === Array) {
        selectedOptions.push(newOption);
      } else {
        selectedOptions = newOption;
      }
      jQuery('#select_' + attr).val(selectedOptions)
      jQuery('#add_' + attr).val("");
      jQuery('#btnAdd' + attr).hide();
      jQuery('#add_' + attr).hide();
    }
  }

  /**
   * To add a new value to selectDropdown when btn clicked
   */
  function addOntoToSelect(attr)
  {
    if(jQuery('#add_' + attr).val()) {
      var newOption = jQuery('#add_' + attr).val();
      var selectedOptions = jQuery('#select_' + attr).val();
      jQuery('#select_' + attr).append(jQuery('<option>', {
        value: newOption,
        text: newOption
      }));
      if (selectedOptions === null) {
        selectedOptions = [];
        selectedOptions.push(newOption);
      } else if (selectedOptions.constructor === Array) {
        selectedOptions.push(newOption);
      } else {
        selectedOptions = newOption;
      }
      jQuery('#select_' + attr).val(selectedOptions)
      jQuery('#select_' + attr).trigger("liszt:updated");
      jQuery('#add_' + attr).val("");
    }
  }

  /**
   * To show/hide the simple metadata div
   */
  function toggleDiv(divId, panelGroup = "none")
  {
    var e = document.getElementById(divId + "Div");
    if (e.style.display == 'block') {
      e.style.display = 'none';
      document.getElementById(divId + "Btn").classList.remove("active");
    } else {
      if (panelGroup === "description") {
        // if panel chosen isPart of description, close the others
        jQuery(".descriptionPanels").css("display", "none");
        jQuery(".descriptionBtn").removeClass("active");
      } else if (panelGroup === "commuple") {
        jQuery(".commuplePanels").css("display", "none");
        jQuery(".commupleBtn").removeClass("active");
      } else if (panelGroup === "ontocontent") {
        jQuery(".ontocontentPanels").css("display", "none");
        jQuery(".ontocontentBtn").removeClass("active");
      }

      e.style.display = 'block';
      document.getElementById(divId + "Btn").classList.add("active");
    }
  }

  /**
   * For Multiple select
   */
  jQuery(document).ready(function() {
    "use strict";
    jQuery("#naturalLanguageSelect").chosen({
      search_contains: true
    });
    jQuery(".selectOntology").chosen({
      search_contains: true
    });

    $('.tooltip').tooltipster({
      interactive: true,
      position: "right",
      contentAsHTML: true,
      animation: 'fade',
      delay: 200,
      theme: 'tooltipster-light',
      trigger: 'hover'
    });


    if ( $(".btn_cancel_request").length ) {
      //the button exists
      var btn_cancel_selector = $(".btn_cancel_request")
      var req_id = btn_cancel_selector[0].id.split("-")[1]
      btn_cancel_selector.click(function(e){
        var resp_Yes = confirm("Do you want to cancel the DOI request?");
        if (resp_Yes) {
            if (req_id) {
            //ajax call to cancel the request
            var URL = '/ajax/cancelIdentifierRequest'
            jQuery.ajax({
              type: "POST",
              url: URL,
              data: {
                requestId: req_id,
                status: "CANCELED"
              },
              dataType: "json",
              success: function(data) {
                //jQuery(".subscribe_spinner").hide();
                alert("The request was canceled!");
                var html_identifier = `
                  <!-- Manually insert Identifier -->
                  <div class="d-flex align-items-top">
                    <label class="float-right" for="submission_identifierType">Type<span class="asterik">*</span></label>
                    <div class="formControlErrorContainer">
                      <select class="form-control input-sm w100perc" id="submission_identifierType" name="submission[identifierType]">
                        <option selected="selected" value="None">None</option>
                        <option value="DOI">DOI</option>
                        <option value="Other">Other</option>
                      </select>
                      <!-- <input class="w100perc" value="DOI" type="text" name="submission[identifierType]" id="submission_identifierType"/> -->
                    </div>
                    <label class="float-right" for="submission_identifier">Identifier<span class="asterik">*</span></label>
                    <div class="formControlErrorContainer">
                      <input class="form-control input-sm w100perc" id="submission_identifier" name="submission[identifier]" type="text" disabled="">
                    </div>
                  </div>
                  <div>
                    <small class="form-text text-muted">
                        Insert the Persistent Identifier - DOI or other - of your semantic asset
                    </small>
                  </div>
                  <div class="margin-top-10px">
                      <div id="div-cb-require-doi">
                        <input id="doi_request" name="submission[is_doi_requested]" type="checkbox">
                        <label for="doi_request">Check this box if your asset has no PID and you want to request a DOI</label>
                      </div>
                  </div>`;
                $("#identifier_fields_col").html(html_identifier)
                $("#submission_identifierType").change(function(e){
                  // log('submission_identifierType change');
                  updateIdentifierType();
                });
              },
              error: function(data) {
                alert( "An Error has occurred. The request cannot be canceled");
              }
            });
            /*$.post(URL,
              {
                requestId: req_id,
                status: "CANCELED"
              },
              function(data, status){
                alert("The request was canceled!");
              }).fail(function() {
              alert( "An Error has occurred. The request cannot be canceled" );
              });*/
          } else {
            alert("WARNING! The request ID is not defined. The request cannot be canceled")
          }
        }
        e.preventDefault();
      });

    }



  });
