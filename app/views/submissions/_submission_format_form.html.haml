:javascript

  function ontologyFormatChange(event){
    let selected = event.target.selectedOptions.item(0)
    let options = document.querySelectorAll('.format_options')
    Array.from(options).forEach( x => $(x).hide())
    switch(selected.value){
      case 'OWL':
        jQuery("#owl_options").show()
        break
      case 'SKOS':
        jQuery("#skos_options").show()
        break
    }
  }

= attribute_form_group_container('hasOntologyLanguage', label: 'Format', required: true) do |c|
  - ont_formats = %w[OBO OWL UMLS SKOS].sort
  - selected = @submission.hasOntologyLanguage ? @submission.hasOntologyLanguage : "OWL"
  = select c.name,  c.method_name, options_for_select(ont_formats, selected), {required: true}, {class: "form-control", onchange: 'ontologyFormatChange(event)'}
  - c.help do
    %div#skos_options.format_options{style: "display:#{skos? ? 'block': 'none'}"}
      SKOS vocabularies submitted to BioPortal must contain a minimum of one concept scheme and top concept assertion.
      Please refer to the NCBO wiki for a more #{link_to 'detailed explanation', 'https://www.bioontology.org/wiki/index.php/SKOSSupport', target: "_blank" }
      with examples.

%div#owl_options.form-group.row.format_options
  %div.col-sm-8.offset-sm-4
    %a#collapseOWLOptions{href: "#owl-options-properties", role: "button", data: {toggle: "collapse"}, aria: {expanded: "false", controls: "owl-options"},
                class: "btn btn-outline-secondary btn-sm"} Show advanced OWL options

  %div#owl-options-properties.collapse
    %div.form-group.row
      %div.col-sm-8.offset-sm-2
        %label.lead Customize default property settings
        = attribute_text_field_container('prefLabelProperty', label: 'Preferred name', inline: false) do |c|
          - c.help do
            Enter a property ID, or leave blank to use the default setting:
            = link_to 'http://www.w3.org/2004/02/skos/core#prefLabel', 'http://www.w3.org/2004/02/skos/core#prefLabel', target: "_blank"

        = attribute_text_field_container('synonymProperty', label: 'Synonym', inline: false) do |c|
          - c.help do
            Enter a property ID, or leave blank to use the default setting:
            = link_to 'http://www.w3.org/2004/02/skos/core#altLabel', 'http://www.w3.org/2004/02/skos/core#altLabel', target: "_blank"


        = attribute_text_field_container('definitionProperty', label: 'Definition', inline: false) do |c|
          - c.help do
            Enter a property ID, or leave blank to use the default setting:
            = link_to 'http://www.w3.org/2004/02/skos/core#definition', 'http://www.w3.org/2004/02/skos/core#definition', target: "_blank"


        = attribute_text_field_container('authorProperty', label: 'Author', inline: false) do |c|
          - c.help do
            Enter a property ID, or leave blank to use the default setting:
            = link_to 'http://purl.org/dc/elements/1.1/creator', 'http://purl.org/dc/elements/1.1/creator', target: "_blank"


    %div.form-group.row
      %div.col-sm-8.offset-sm-2
        %label.lead Identify obsolete classes
        = attribute_text_field_container('obsoleteProperty', label: 'Obsolete property', inline: false) do |c|
          - c.help do
            Optionally enter a property ID that indicates obsolete status for ontology classes
            (the property value must be set to "true"). Note that by default, BioPortal checks for existence of the owl:deprecated property.

        = attribute_text_field_container('obsoleteParent', label: 'Obsolete branch root', inline: false) do |c|
          - c.help do
            Optionally enter a class ID for the root of an obsolete branch. All classes in the branch will be marked as
            obsolete, with the exception of the root class.
